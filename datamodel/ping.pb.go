// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/NEU-SNS/ReverseTraceroute/datamodel/ping.proto

package datamodel

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingMeasurement struct {
	Src                  uint32   `protobuf:"varint,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst                  uint32   `protobuf:"varint,2,opt,name=dst,proto3" json:"dst,omitempty"`
	SpooferAddr          uint32   `protobuf:"varint,3,opt,name=spoofer_addr,json=spooferAddr,proto3" json:"spoofer_addr,omitempty"`
	Spoof                bool     `protobuf:"varint,4,opt,name=spoof,proto3" json:"spoof,omitempty"`
	RR                   bool     `protobuf:"varint,5,opt,name=RR,proto3" json:"RR,omitempty"`
	SAddr                string   `protobuf:"bytes,6,opt,name=s_addr,json=sAddr,proto3" json:"s_addr,omitempty"`
	Payload              string   `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	Count                string   `protobuf:"bytes,8,opt,name=count,proto3" json:"count,omitempty"`
	IcmpSum              string   `protobuf:"bytes,9,opt,name=icmp_sum,json=icmpSum,proto3" json:"icmp_sum,omitempty"`
	Dport                string   `protobuf:"bytes,10,opt,name=dport,proto3" json:"dport,omitempty"`
	Sport                string   `protobuf:"bytes,11,opt,name=sport,proto3" json:"sport,omitempty"`
	Wait                 string   `protobuf:"bytes,12,opt,name=wait,proto3" json:"wait,omitempty"`
	Ttl                  string   `protobuf:"bytes,13,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Mtu                  string   `protobuf:"bytes,14,opt,name=mtu,proto3" json:"mtu,omitempty"`
	ReplyCount           string   `protobuf:"bytes,15,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`
	Pattern              string   `protobuf:"bytes,16,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Method               string   `protobuf:"bytes,17,opt,name=method,proto3" json:"method,omitempty"`
	Size                 string   `protobuf:"bytes,18,opt,name=size,proto3" json:"size,omitempty"`
	UserId               string   `protobuf:"bytes,19,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Tos                  string   `protobuf:"bytes,20,opt,name=tos,proto3" json:"tos,omitempty"`
	TimeStamp            string   `protobuf:"bytes,21,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	Timeout              int64    `protobuf:"varint,22,opt,name=timeout,proto3" json:"timeout,omitempty"`
	CheckCache           bool     `protobuf:"varint,23,opt,name=check_cache,json=checkCache,proto3" json:"check_cache,omitempty"`
	CheckDb              bool     `protobuf:"varint,24,opt,name=check_db,json=checkDb,proto3" json:"check_db,omitempty"`
	Staleness            int64    `protobuf:"varint,25,opt,name=staleness,proto3" json:"staleness,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMeasurement) Reset()         { *m = PingMeasurement{} }
func (m *PingMeasurement) String() string { return proto.CompactTextString(m) }
func (*PingMeasurement) ProtoMessage()    {}
func (*PingMeasurement) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a4a2262c934d0c, []int{0}
}

func (m *PingMeasurement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMeasurement.Unmarshal(m, b)
}
func (m *PingMeasurement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMeasurement.Marshal(b, m, deterministic)
}
func (m *PingMeasurement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMeasurement.Merge(m, src)
}
func (m *PingMeasurement) XXX_Size() int {
	return xxx_messageInfo_PingMeasurement.Size(m)
}
func (m *PingMeasurement) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMeasurement.DiscardUnknown(m)
}

var xxx_messageInfo_PingMeasurement proto.InternalMessageInfo

func (m *PingMeasurement) GetSrc() uint32 {
	if m != nil {
		return m.Src
	}
	return 0
}

func (m *PingMeasurement) GetDst() uint32 {
	if m != nil {
		return m.Dst
	}
	return 0
}

func (m *PingMeasurement) GetSpooferAddr() uint32 {
	if m != nil {
		return m.SpooferAddr
	}
	return 0
}

func (m *PingMeasurement) GetSpoof() bool {
	if m != nil {
		return m.Spoof
	}
	return false
}

func (m *PingMeasurement) GetRR() bool {
	if m != nil {
		return m.RR
	}
	return false
}

func (m *PingMeasurement) GetSAddr() string {
	if m != nil {
		return m.SAddr
	}
	return ""
}

func (m *PingMeasurement) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *PingMeasurement) GetCount() string {
	if m != nil {
		return m.Count
	}
	return ""
}

func (m *PingMeasurement) GetIcmpSum() string {
	if m != nil {
		return m.IcmpSum
	}
	return ""
}

func (m *PingMeasurement) GetDport() string {
	if m != nil {
		return m.Dport
	}
	return ""
}

func (m *PingMeasurement) GetSport() string {
	if m != nil {
		return m.Sport
	}
	return ""
}

func (m *PingMeasurement) GetWait() string {
	if m != nil {
		return m.Wait
	}
	return ""
}

func (m *PingMeasurement) GetTtl() string {
	if m != nil {
		return m.Ttl
	}
	return ""
}

func (m *PingMeasurement) GetMtu() string {
	if m != nil {
		return m.Mtu
	}
	return ""
}

func (m *PingMeasurement) GetReplyCount() string {
	if m != nil {
		return m.ReplyCount
	}
	return ""
}

func (m *PingMeasurement) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *PingMeasurement) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *PingMeasurement) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *PingMeasurement) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PingMeasurement) GetTos() string {
	if m != nil {
		return m.Tos
	}
	return ""
}

func (m *PingMeasurement) GetTimeStamp() string {
	if m != nil {
		return m.TimeStamp
	}
	return ""
}

func (m *PingMeasurement) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *PingMeasurement) GetCheckCache() bool {
	if m != nil {
		return m.CheckCache
	}
	return false
}

func (m *PingMeasurement) GetCheckDb() bool {
	if m != nil {
		return m.CheckDb
	}
	return false
}

func (m *PingMeasurement) GetStaleness() int64 {
	if m != nil {
		return m.Staleness
	}
	return 0
}

type PingArg struct {
	Pings                []*PingMeasurement `protobuf:"bytes,1,rep,name=pings,proto3" json:"pings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PingArg) Reset()         { *m = PingArg{} }
func (m *PingArg) String() string { return proto.CompactTextString(m) }
func (*PingArg) ProtoMessage()    {}
func (*PingArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a4a2262c934d0c, []int{1}
}

func (m *PingArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingArg.Unmarshal(m, b)
}
func (m *PingArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingArg.Marshal(b, m, deterministic)
}
func (m *PingArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingArg.Merge(m, src)
}
func (m *PingArg) XXX_Size() int {
	return xxx_messageInfo_PingArg.Size(m)
}
func (m *PingArg) XXX_DiscardUnknown() {
	xxx_messageInfo_PingArg.DiscardUnknown(m)
}

var xxx_messageInfo_PingArg proto.InternalMessageInfo

func (m *PingArg) GetPings() []*PingMeasurement {
	if m != nil {
		return m.Pings
	}
	return nil
}

type PingArgResp struct {
	Pings                []*Ping  `protobuf:"bytes,1,rep,name=pings,proto3" json:"pings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingArgResp) Reset()         { *m = PingArgResp{} }
func (m *PingArgResp) String() string { return proto.CompactTextString(m) }
func (*PingArgResp) ProtoMessage()    {}
func (*PingArgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a4a2262c934d0c, []int{2}
}

func (m *PingArgResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingArgResp.Unmarshal(m, b)
}
func (m *PingArgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingArgResp.Marshal(b, m, deterministic)
}
func (m *PingArgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingArgResp.Merge(m, src)
}
func (m *PingArgResp) XXX_Size() int {
	return xxx_messageInfo_PingArgResp.Size(m)
}
func (m *PingArgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PingArgResp.DiscardUnknown(m)
}

var xxx_messageInfo_PingArgResp proto.InternalMessageInfo

func (m *PingArgResp) GetPings() []*Ping {
	if m != nil {
		return m.Pings
	}
	return nil
}

type PingStats struct {
	Replies              int32    `protobuf:"varint,1,opt,name=replies,proto3" json:"replies,omitempty"`
	Loss                 float32  `protobuf:"fixed32,2,opt,name=loss,proto3" json:"loss,omitempty"`
	Min                  float32  `protobuf:"fixed32,3,opt,name=min,proto3" json:"min,omitempty"`
	Max                  float32  `protobuf:"fixed32,4,opt,name=max,proto3" json:"max,omitempty"`
	Avg                  float32  `protobuf:"fixed32,5,opt,name=avg,proto3" json:"avg,omitempty"`
	Stddev               float32  `protobuf:"fixed32,6,opt,name=stddev,proto3" json:"stddev,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingStats) Reset()         { *m = PingStats{} }
func (m *PingStats) String() string { return proto.CompactTextString(m) }
func (*PingStats) ProtoMessage()    {}
func (*PingStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a4a2262c934d0c, []int{3}
}

func (m *PingStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingStats.Unmarshal(m, b)
}
func (m *PingStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingStats.Marshal(b, m, deterministic)
}
func (m *PingStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingStats.Merge(m, src)
}
func (m *PingStats) XXX_Size() int {
	return xxx_messageInfo_PingStats.Size(m)
}
func (m *PingStats) XXX_DiscardUnknown() {
	xxx_messageInfo_PingStats.DiscardUnknown(m)
}

var xxx_messageInfo_PingStats proto.InternalMessageInfo

func (m *PingStats) GetReplies() int32 {
	if m != nil {
		return m.Replies
	}
	return 0
}

func (m *PingStats) GetLoss() float32 {
	if m != nil {
		return m.Loss
	}
	return 0
}

func (m *PingStats) GetMin() float32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *PingStats) GetMax() float32 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *PingStats) GetAvg() float32 {
	if m != nil {
		return m.Avg
	}
	return 0
}

func (m *PingStats) GetStddev() float32 {
	if m != nil {
		return m.Stddev
	}
	return 0
}

type PingResponse struct {
	From                 uint32       `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Seq                  uint32       `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	ReplySize            uint32       `protobuf:"varint,3,opt,name=reply_size,json=replySize,proto3" json:"reply_size,omitempty"`
	ReplyTtl             uint32       `protobuf:"varint,4,opt,name=reply_ttl,json=replyTtl,proto3" json:"reply_ttl,omitempty"`
	ReplyProto           string       `protobuf:"bytes,5,opt,name=reply_proto,json=replyProto,proto3" json:"reply_proto,omitempty"`
	Tx                   *Time        `protobuf:"bytes,6,opt,name=tx,proto3" json:"tx,omitempty"`
	Rx                   *Time        `protobuf:"bytes,7,opt,name=rx,proto3" json:"rx,omitempty"`
	Rtt                  uint32       `protobuf:"varint,8,opt,name=rtt,proto3" json:"rtt,omitempty"`
	ProbeIpid            uint32       `protobuf:"varint,9,opt,name=probe_ipid,json=probeIpid,proto3" json:"probe_ipid,omitempty"`
	ReplyIpid            uint32       `protobuf:"varint,10,opt,name=reply_ipid,json=replyIpid,proto3" json:"reply_ipid,omitempty"`
	IcmpType             uint32       `protobuf:"varint,11,opt,name=icmp_type,json=icmpType,proto3" json:"icmp_type,omitempty"`
	IcmpCode             uint32       `protobuf:"varint,12,opt,name=icmp_code,json=icmpCode,proto3" json:"icmp_code,omitempty"`
	RR                   []uint32     `protobuf:"varint,13,rep,packed,name=RR,proto3" json:"RR,omitempty"`
	Tsonly               []uint32     `protobuf:"varint,14,rep,packed,name=tsonly,proto3" json:"tsonly,omitempty"`
	Tsandaddr            []*TsAndAddr `protobuf:"bytes,15,rep,name=tsandaddr,proto3" json:"tsandaddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a4a2262c934d0c, []int{4}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetFrom() uint32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *PingResponse) GetSeq() uint32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *PingResponse) GetReplySize() uint32 {
	if m != nil {
		return m.ReplySize
	}
	return 0
}

func (m *PingResponse) GetReplyTtl() uint32 {
	if m != nil {
		return m.ReplyTtl
	}
	return 0
}

func (m *PingResponse) GetReplyProto() string {
	if m != nil {
		return m.ReplyProto
	}
	return ""
}

func (m *PingResponse) GetTx() *Time {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *PingResponse) GetRx() *Time {
	if m != nil {
		return m.Rx
	}
	return nil
}

func (m *PingResponse) GetRtt() uint32 {
	if m != nil {
		return m.Rtt
	}
	return 0
}

func (m *PingResponse) GetProbeIpid() uint32 {
	if m != nil {
		return m.ProbeIpid
	}
	return 0
}

func (m *PingResponse) GetReplyIpid() uint32 {
	if m != nil {
		return m.ReplyIpid
	}
	return 0
}

func (m *PingResponse) GetIcmpType() uint32 {
	if m != nil {
		return m.IcmpType
	}
	return 0
}

func (m *PingResponse) GetIcmpCode() uint32 {
	if m != nil {
		return m.IcmpCode
	}
	return 0
}

func (m *PingResponse) GetRR() []uint32 {
	if m != nil {
		return m.RR
	}
	return nil
}

func (m *PingResponse) GetTsonly() []uint32 {
	if m != nil {
		return m.Tsonly
	}
	return nil
}

func (m *PingResponse) GetTsandaddr() []*TsAndAddr {
	if m != nil {
		return m.Tsandaddr
	}
	return nil
}

type TsAndAddr struct {
	Ip                   uint32   `protobuf:"varint,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Ts                   uint32   `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TsAndAddr) Reset()         { *m = TsAndAddr{} }
func (m *TsAndAddr) String() string { return proto.CompactTextString(m) }
func (*TsAndAddr) ProtoMessage()    {}
func (*TsAndAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a4a2262c934d0c, []int{5}
}

func (m *TsAndAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TsAndAddr.Unmarshal(m, b)
}
func (m *TsAndAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TsAndAddr.Marshal(b, m, deterministic)
}
func (m *TsAndAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TsAndAddr.Merge(m, src)
}
func (m *TsAndAddr) XXX_Size() int {
	return xxx_messageInfo_TsAndAddr.Size(m)
}
func (m *TsAndAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_TsAndAddr.DiscardUnknown(m)
}

var xxx_messageInfo_TsAndAddr proto.InternalMessageInfo

func (m *TsAndAddr) GetIp() uint32 {
	if m != nil {
		return m.Ip
	}
	return 0
}

func (m *TsAndAddr) GetTs() uint32 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type Ping struct {
	Type                 string          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Method               string          `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Src                  uint32          `protobuf:"varint,3,opt,name=src,proto3" json:"src,omitempty"`
	Dst                  uint32          `protobuf:"varint,4,opt,name=dst,proto3" json:"dst,omitempty"`
	Start                *Time           `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	PingSent             uint32          `protobuf:"varint,6,opt,name=ping_sent,json=pingSent,proto3" json:"ping_sent,omitempty"`
	ProbeSize            uint32          `protobuf:"varint,7,opt,name=probe_size,json=probeSize,proto3" json:"probe_size,omitempty"`
	UserId               uint32          `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ttl                  uint32          `protobuf:"varint,9,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Wait                 uint32          `protobuf:"varint,10,opt,name=wait,proto3" json:"wait,omitempty"`
	Timeout              uint32          `protobuf:"varint,11,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Flags                []string        `protobuf:"bytes,12,rep,name=flags,proto3" json:"flags,omitempty"`
	Responses            []*PingResponse `protobuf:"bytes,13,rep,name=responses,proto3" json:"responses,omitempty"`
	Statistics           *PingStats      `protobuf:"bytes,14,opt,name=statistics,proto3" json:"statistics,omitempty"`
	Error                string          `protobuf:"bytes,15,opt,name=error,proto3" json:"error,omitempty"`
	Version              string          `protobuf:"bytes,16,opt,name=version,proto3" json:"version,omitempty"`
	SpoofedFrom          uint32          `protobuf:"varint,17,opt,name=spoofed_from,json=spoofedFrom,proto3" json:"spoofed_from,omitempty"`
	Id                   int64           `protobuf:"varint,18,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a4a2262c934d0c, []int{6}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Ping) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Ping) GetSrc() uint32 {
	if m != nil {
		return m.Src
	}
	return 0
}

func (m *Ping) GetDst() uint32 {
	if m != nil {
		return m.Dst
	}
	return 0
}

func (m *Ping) GetStart() *Time {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Ping) GetPingSent() uint32 {
	if m != nil {
		return m.PingSent
	}
	return 0
}

func (m *Ping) GetProbeSize() uint32 {
	if m != nil {
		return m.ProbeSize
	}
	return 0
}

func (m *Ping) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Ping) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *Ping) GetWait() uint32 {
	if m != nil {
		return m.Wait
	}
	return 0
}

func (m *Ping) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *Ping) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *Ping) GetResponses() []*PingResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Ping) GetStatistics() *PingStats {
	if m != nil {
		return m.Statistics
	}
	return nil
}

func (m *Ping) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Ping) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Ping) GetSpoofedFrom() uint32 {
	if m != nil {
		return m.SpoofedFrom
	}
	return 0
}

func (m *Ping) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*PingMeasurement)(nil), "datamodel.PingMeasurement")
	proto.RegisterType((*PingArg)(nil), "datamodel.PingArg")
	proto.RegisterType((*PingArgResp)(nil), "datamodel.PingArgResp")
	proto.RegisterType((*PingStats)(nil), "datamodel.PingStats")
	proto.RegisterType((*PingResponse)(nil), "datamodel.PingResponse")
	proto.RegisterType((*TsAndAddr)(nil), "datamodel.TsAndAddr")
	proto.RegisterType((*Ping)(nil), "datamodel.Ping")
}

func init() {
	proto.RegisterFile("github.com/NEU-SNS/ReverseTraceroute/datamodel/ping.proto", fileDescriptor_75a4a2262c934d0c)
}

var fileDescriptor_75a4a2262c934d0c = []byte{
	// 973 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xcd, 0x6e, 0xe4, 0x44,
	0x10, 0xd6, 0xd8, 0x33, 0x99, 0xb8, 0x27, 0x93, 0xec, 0x9a, 0x6c, 0xd2, 0xbb, 0x0b, 0xda, 0x61,
	0xa4, 0x95, 0x46, 0x42, 0x24, 0x28, 0x2c, 0x07, 0xc4, 0x29, 0x04, 0x90, 0xf6, 0xc0, 0x6a, 0xd5,
	0x13, 0x2e, 0x5c, 0x2c, 0xc7, 0xdd, 0x99, 0xb4, 0xb0, 0xdd, 0xde, 0xae, 0x72, 0x98, 0xe1, 0x05,
	0x78, 0x26, 0x1e, 0x89, 0x37, 0xe0, 0x88, 0xaa, 0xda, 0xf3, 0x93, 0xb0, 0x17, 0x6e, 0x5d, 0x5f,
	0xb5, 0xdb, 0xd5, 0xfe, 0x7e, 0x2c, 0xbe, 0x5d, 0x58, 0xbc, 0x6b, 0x6f, 0xce, 0x0a, 0x57, 0x9d,
	0xbf, 0xfb, 0xf1, 0x97, 0x2f, 0xe7, 0xef, 0xe6, 0xe7, 0xca, 0xdc, 0x1b, 0x0f, 0xe6, 0xda, 0xe7,
	0x85, 0xf1, 0xae, 0x45, 0x73, 0xae, 0x73, 0xcc, 0x2b, 0xa7, 0x4d, 0x79, 0xde, 0xd8, 0x7a, 0x71,
	0xd6, 0x78, 0x87, 0x2e, 0x4d, 0x36, 0xe8, 0x8b, 0xff, 0x7b, 0x0a, 0xda, 0xca, 0x84, 0x53, 0xa6,
	0x7f, 0xf7, 0xc5, 0xd1, 0x7b, 0x5b, 0x2f, 0x7e, 0x36, 0x39, 0xb4, 0xde, 0x54, 0xa6, 0xc6, 0xf4,
	0x89, 0x88, 0xc1, 0x17, 0xb2, 0x37, 0xe9, 0xcd, 0xc6, 0x8a, 0x96, 0x84, 0x68, 0x40, 0x19, 0x05,
	0x44, 0x03, 0xa6, 0x9f, 0x8b, 0x03, 0x68, 0x9c, 0xbb, 0x35, 0x3e, 0xcb, 0xb5, 0xf6, 0x32, 0xe6,
	0xd6, 0xa8, 0xc3, 0x2e, 0xb5, 0xf6, 0xe9, 0xb1, 0x18, 0x70, 0x29, 0xfb, 0x93, 0xde, 0x6c, 0x5f,
	0x85, 0x22, 0x3d, 0x14, 0x91, 0x52, 0x72, 0xc0, 0x50, 0xa4, 0x54, 0xfa, 0x4c, 0xec, 0x41, 0x38,
	0x62, 0x6f, 0xd2, 0x9b, 0x25, 0x6a, 0x00, 0xfc, 0xb0, 0x14, 0xc3, 0x26, 0x5f, 0x95, 0x2e, 0xd7,
	0x72, 0xc8, 0xf8, 0xba, 0xa4, 0x63, 0x0b, 0xd7, 0xd6, 0x28, 0xf7, 0xc3, 0x7e, 0x2e, 0xd2, 0xe7,
	0x62, 0xdf, 0x16, 0x55, 0x93, 0x41, 0x5b, 0xc9, 0x24, 0x3c, 0x40, 0xf5, 0xbc, 0xad, 0xe8, 0x01,
	0xdd, 0x38, 0x8f, 0x52, 0x84, 0x07, 0xb8, 0xe8, 0xa6, 0xf3, 0x28, 0x47, 0xdd, 0x6b, 0x19, 0x4d,
	0x45, 0xff, 0xf7, 0xdc, 0xa2, 0x3c, 0x60, 0x90, 0xd7, 0x74, 0x79, 0xc4, 0x52, 0x8e, 0x19, 0xa2,
	0x25, 0x21, 0x15, 0xb6, 0xf2, 0x30, 0x20, 0x15, 0xb6, 0xe9, 0x2b, 0x31, 0xf2, 0xa6, 0x29, 0x57,
	0x59, 0x18, 0xed, 0x88, 0x3b, 0x82, 0xa1, 0x2b, 0x9e, 0x8f, 0xef, 0x83, 0x68, 0x7c, 0x2d, 0x9f,
	0xac, 0xef, 0xc3, 0x65, 0x7a, 0x22, 0xf6, 0x2a, 0x83, 0x77, 0x4e, 0xcb, 0xa7, 0xdc, 0xe8, 0x2a,
	0x1a, 0x05, 0xec, 0x1f, 0x46, 0xa6, 0x61, 0x14, 0x5a, 0xa7, 0xa7, 0x62, 0xd8, 0x82, 0xf1, 0x99,
	0xd5, 0xf2, 0x93, 0xb0, 0x99, 0xca, 0xb7, 0x9a, 0x67, 0x74, 0x20, 0x8f, 0xbb, 0x19, 0x1d, 0xa4,
	0x9f, 0x09, 0x41, 0x34, 0x67, 0x80, 0x79, 0xd5, 0xc8, 0x67, 0xdc, 0x48, 0x08, 0x99, 0x13, 0x40,
	0xf3, 0x50, 0xe1, 0x5a, 0x94, 0x27, 0x93, 0xde, 0x2c, 0x56, 0xeb, 0x92, 0xae, 0x52, 0xdc, 0x99,
	0xe2, 0xb7, 0xac, 0xc8, 0x8b, 0x3b, 0x23, 0x4f, 0x99, 0x29, 0xc1, 0xd0, 0x15, 0x21, 0xf4, 0xa9,
	0xc3, 0x06, 0x7d, 0x23, 0x25, 0x77, 0x87, 0x5c, 0xff, 0x70, 0x93, 0x7e, 0x2a, 0x12, 0xc0, 0xbc,
	0x34, 0xb5, 0x01, 0x90, 0xcf, 0xf9, 0xdc, 0x2d, 0x30, 0xfd, 0x4e, 0x0c, 0x49, 0x6a, 0x97, 0x7e,
	0x91, 0x7e, 0x25, 0x06, 0x24, 0x65, 0x90, 0xbd, 0x49, 0x3c, 0x1b, 0x5d, 0xbc, 0x38, 0xdb, 0x88,
	0xf3, 0xec, 0x91, 0x1a, 0x55, 0xd8, 0x38, 0x7d, 0x23, 0x46, 0xdd, 0xc3, 0xca, 0x40, 0x93, 0xbe,
	0x7e, 0x78, 0xc0, 0xd1, 0xa3, 0x03, 0xd6, 0x4f, 0xfd, 0xd9, 0x13, 0x09, 0xd5, 0x73, 0xcc, 0x11,
	0xe8, 0xd2, 0x44, 0x89, 0x35, 0xc0, 0xe2, 0x1e, 0xa8, 0x75, 0x49, 0x1f, 0xbb, 0x74, 0x00, 0xac,
	0xf0, 0x48, 0xf1, 0x9a, 0x59, 0xb6, 0x35, 0x2b, 0x3b, 0x52, 0xb4, 0x64, 0x24, 0x5f, 0xb2, 0x9e,
	0x09, 0xc9, 0x97, 0x84, 0xe4, 0xf7, 0x0b, 0x96, 0x73, 0xa4, 0x68, 0x49, 0x74, 0x02, 0x6a, 0x6d,
	0xee, 0x59, 0xcf, 0x91, 0xea, 0xaa, 0xe9, 0x5f, 0xb1, 0x38, 0xe0, 0xc9, 0x0c, 0x34, 0xae, 0x06,
	0x43, 0xaf, 0xbc, 0xf5, 0xae, 0xea, 0x6c, 0xc6, 0x6b, 0x76, 0x9e, 0xf9, 0xb0, 0xf6, 0x19, 0x98,
	0x0f, 0x44, 0x63, 0x10, 0x16, 0x6b, 0x21, 0xb8, 0x2c, 0x61, 0x64, 0x4e, 0x82, 0x78, 0x29, 0x42,
	0x91, 0x91, 0x42, 0xfb, 0xdc, 0xdd, 0x67, 0xe0, 0x1a, 0xcb, 0xad, 0x28, 0xd9, 0xea, 0x3c, 0xe4,
	0x5a, 0x94, 0xef, 0x39, 0x42, 0x5e, 0x89, 0x08, 0x97, 0x3c, 0xe7, 0xc3, 0x2f, 0x78, 0x6d, 0x2b,
	0xa3, 0x22, 0x5c, 0xd2, 0x06, 0xbf, 0x64, 0x03, 0x7e, 0x6c, 0x83, 0xe7, 0xfb, 0x7b, 0x0c, 0x56,
	0x1c, 0x2b, 0x5a, 0xd2, 0xc0, 0x8d, 0x77, 0x37, 0x26, 0xb3, 0x8d, 0xd5, 0x6c, 0xc5, 0xb1, 0x4a,
	0x18, 0x79, 0xdb, 0x58, 0xbd, 0xbd, 0x0f, 0xb7, 0xc5, 0xce, 0x7d, 0xb8, 0xfd, 0x52, 0x24, 0x6c,
	0x63, 0x5c, 0x35, 0x86, 0x9d, 0x39, 0x56, 0xec, 0xeb, 0xeb, 0x55, 0x63, 0x36, 0xcd, 0xc2, 0x69,
	0xc3, 0x0e, 0xed, 0x9a, 0x57, 0x4e, 0x9b, 0x2e, 0x57, 0xc6, 0x93, 0x78, 0x36, 0xe6, 0x5c, 0x39,
	0x11, 0x7b, 0x08, 0xae, 0x2e, 0x57, 0xf2, 0x90, 0xb1, 0xae, 0x4a, 0x2f, 0x44, 0x82, 0x90, 0xd7,
	0x9a, 0x23, 0xe7, 0x88, 0xc5, 0x73, 0xbc, 0x7b, 0x33, 0xb8, 0xac, 0x35, 0x25, 0x90, 0xda, 0x6e,
	0x9b, 0x7e, 0x21, 0x92, 0x0d, 0x4e, 0x2f, 0xb2, 0x4d, 0xc7, 0x5a, 0x64, 0x1b, 0xaa, 0x11, 0x3a,
	0xca, 0x22, 0x84, 0xe9, 0x3f, 0xb1, 0xe8, 0x13, 0xd1, 0x44, 0x30, 0x5f, 0xa3, 0x17, 0x0c, 0x4c,
	0xeb, 0x1d, 0xb3, 0x47, 0x0f, 0xcc, 0xde, 0x45, 0x6e, 0xfc, 0x9f, 0xc8, 0xed, 0x6f, 0x23, 0xf7,
	0xb5, 0x18, 0x00, 0xe6, 0x1e, 0x99, 0xc8, 0x8f, 0xf0, 0x11, 0xba, 0xf4, 0x95, 0x48, 0xfb, 0x19,
	0x98, 0x1a, 0x99, 0xdb, 0xb1, 0xda, 0x27, 0x60, 0x4e, 0xd1, 0xbe, 0x61, 0x87, 0xe5, 0x34, 0xdc,
	0x61, 0x67, 0xfe, 0x28, 0x5f, 0x02, 0xa5, 0xbb, 0xf9, 0x82, 0x65, 0x47, 0x27, 0x67, 0xe0, 0x3a,
	0x29, 0x03, 0x85, 0x21, 0x29, 0x77, 0x42, 0x25, 0x70, 0xb7, 0x09, 0x95, 0x63, 0x31, 0xb8, 0x2d,
	0xf3, 0x05, 0xc8, 0x83, 0x49, 0x4c, 0x69, 0xcb, 0x45, 0xfa, 0x0d, 0xa9, 0x37, 0xd8, 0x01, 0x98,
	0xba, 0xd1, 0xc5, 0xe9, 0x63, 0x23, 0x77, 0x7d, 0xb5, 0xdd, 0x99, 0xbe, 0x11, 0x02, 0x30, 0x47,
	0x0b, 0x68, 0x0b, 0xe0, 0x14, 0x7e, 0xc8, 0xe1, 0xc6, 0xf0, 0x6a, 0x67, 0x1f, 0x8d, 0x60, 0xbc,
	0x77, 0xbe, 0x0b, 0xe7, 0x50, 0xd0, 0xc8, 0xf4, 0x9f, 0xb4, 0x6e, 0x93, 0xcb, 0x5d, 0xb9, 0xfd,
	0xc3, 0xe9, 0x8c, 0x7d, 0xfa, 0x74, 0xf7, 0x0f, 0xa7, 0x7f, 0x22, 0xbb, 0x92, 0x14, 0x34, 0x07,
	0x74, 0xac, 0x22, 0xab, 0xbf, 0x1f, 0xfd, 0xba, 0xfd, 0x29, 0xdf, 0xec, 0xb1, 0xeb, 0xbe, 0xfe,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x83, 0x5b, 0x0b, 0x95, 0xe3, 0x07, 0x00, 0x00,
}
