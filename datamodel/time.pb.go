// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/NEU-SNS/ReverseTraceroute/datamodel/time.proto

package datamodel

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Time struct {
	Sec                  int64    `protobuf:"varint,1,opt,name=sec,proto3" json:"sec,omitempty"`
	Usec                 int64    `protobuf:"varint,2,opt,name=usec,proto3" json:"usec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}
func (*Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_389101e260c473b2, []int{0}
}

func (m *Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Time.Unmarshal(m, b)
}
func (m *Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Time.Marshal(b, m, deterministic)
}
func (m *Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Time.Merge(m, src)
}
func (m *Time) XXX_Size() int {
	return xxx_messageInfo_Time.Size(m)
}
func (m *Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Time proto.InternalMessageInfo

func (m *Time) GetSec() int64 {
	if m != nil {
		return m.Sec
	}
	return 0
}

func (m *Time) GetUsec() int64 {
	if m != nil {
		return m.Usec
	}
	return 0
}

type RTT struct {
	Sec                  int64    `protobuf:"varint,1,opt,name=sec,proto3" json:"sec,omitempty"`
	Usec                 int64    `protobuf:"varint,2,opt,name=usec,proto3" json:"usec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RTT) Reset()         { *m = RTT{} }
func (m *RTT) String() string { return proto.CompactTextString(m) }
func (*RTT) ProtoMessage()    {}
func (*RTT) Descriptor() ([]byte, []int) {
	return fileDescriptor_389101e260c473b2, []int{1}
}

func (m *RTT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTT.Unmarshal(m, b)
}
func (m *RTT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTT.Marshal(b, m, deterministic)
}
func (m *RTT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTT.Merge(m, src)
}
func (m *RTT) XXX_Size() int {
	return xxx_messageInfo_RTT.Size(m)
}
func (m *RTT) XXX_DiscardUnknown() {
	xxx_messageInfo_RTT.DiscardUnknown(m)
}

var xxx_messageInfo_RTT proto.InternalMessageInfo

func (m *RTT) GetSec() int64 {
	if m != nil {
		return m.Sec
	}
	return 0
}

func (m *RTT) GetUsec() int64 {
	if m != nil {
		return m.Usec
	}
	return 0
}

func init() {
	proto.RegisterType((*Time)(nil), "datamodel.Time")
	proto.RegisterType((*RTT)(nil), "datamodel.RTT")
}

func init() {
	proto.RegisterFile("github.com/NEU-SNS/ReverseTraceroute/datamodel/time.proto", fileDescriptor_389101e260c473b2)
}

var fileDescriptor_389101e260c473b2 = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x4c, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xf7, 0x73, 0x0d, 0xd5, 0x0d, 0xf6, 0x0b, 0xd6, 0x0f,
	0x4a, 0x2d, 0x4b, 0x2d, 0x2a, 0x4e, 0x0d, 0x29, 0x4a, 0x4c, 0x4e, 0x2d, 0xca, 0x2f, 0x2d, 0x49,
	0xd5, 0x4f, 0x49, 0x2c, 0x49, 0xcc, 0xcd, 0x4f, 0x49, 0xcd, 0xd1, 0x2f, 0xc9, 0xcc, 0x4d, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x8b, 0x2a, 0xe9, 0x70, 0xb1, 0x84, 0x64, 0xe6,
	0xa6, 0x0a, 0x09, 0x70, 0x31, 0x17, 0xa7, 0x26, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x81,
	0x98, 0x42, 0x42, 0x5c, 0x2c, 0xa5, 0x20, 0x21, 0x26, 0xb0, 0x10, 0x98, 0xad, 0xa4, 0xcd, 0xc5,
	0x1c, 0x14, 0x12, 0x42, 0x9c, 0x62, 0x27, 0xee, 0x28, 0x84, 0x3d, 0x49, 0x6c, 0x60, 0x9b, 0x8d,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x67, 0x48, 0x83, 0xe8, 0xb6, 0x00, 0x00, 0x00,
}
